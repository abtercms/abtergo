openapi: "3.0.3"

info:
  version: 0.1.0
  title: AbterCMS API
  description: API for AbterCMS (AbterPhp, AbterGo, etc.)
  termsOfService: http://abtercms.do/terms/
  contact:
    name: AbterCMS Team
    email: team@abtercms.com
    url: https://team@abtercms.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

tags:
  - name: cms
    description: New, language-independent CMS

servers:
- url: https://abtercms.do/api

paths:
  /redirects:
    get:
      description: Retrieves a list of redirects
      operationId: listRedirects
      parameters:
      - $ref: '#/components/parameters/tokenHeader'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/offsetParam'
      responses:
        '200':
          description: Redirect list success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedirectListResponse'
        default:
          description: Unexpected error
          content:
            application/json+problem:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - abtercms_auth:
            - 'read:redirects'

    post:
      description: Creates a new redirect
      operationId: createRedirect
      parameters:
      - $ref: '#/components/parameters/tokenHeader'
      requestBody:
        description: Redirect to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Redirect'
      responses:
        '204':
          description: Redirect create success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Redirect'
        default:
          description: Unexpected error
          content:
            application/json+problem:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - abtercms_auth:
            - 'read:redirects'
            - 'write:redirects'

  /redirects/{id}:
    get:
      description: Get an existing redirect
      operationId: getRedirect
      parameters:
      - $ref: '#/components/parameters/tokenHeader'
      - $ref: '#/components/parameters/idPath'
      responses:
        '200':
          description: Redirect update success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Redirect'
        default:
          description: Unexpected error
          content:
            application/json+problem:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - abtercms_auth:
            - 'read:redirects'

    put:
      description: Update an existing redirect
      operationId: updateRedirect
      parameters:
      - $ref: '#/components/parameters/tokenHeader'
      - $ref: '#/components/parameters/idPath'
      requestBody:
        description: Redirect to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Redirect'
      responses:
        '200':
          description: Redirect update success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Redirect'
        default:
          description: Unexpected error
          content:
            application/json+problem:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - abtercms_auth:
            - 'read:redirects'
            - 'write:redirects'

    delete:
      description: Delete an existing redirect
      operationId: deleteRedirect
      parameters:
      - $ref: '#/components/parameters/tokenHeader'
      - $ref: '#/components/parameters/idPath'
      responses:
        '200':
          description: Redirect delete success response
        default:
          description: Unexpected error
          content:
            application/json+problem:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - abtercms_auth:
            - 'read:redirects'
            - 'write:redirects'


  /templates:
    get:
      description: Retrieves a list of templates
      operationId: listTemplates
      parameters:
      - $ref: '#/components/parameters/tokenHeader'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/offsetParam'
      responses:
        '200':
          description: Template list success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateListResponse'
        default:
          description: Unexpected error
          content:
            application/json+problem:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - abtercms_auth:
            - 'read:templates'

    post:
      description: Creates a new template
      operationId: createTemplate
      parameters:
      - $ref: '#/components/parameters/tokenHeader'
      requestBody:
        description: Template to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
      responses:
        '204':
          description: Template create success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        default:
          description: Unexpected error
          content:
            application/json+problem:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - abtercms_auth:
            - 'read:templates'
            - 'write:templates'

  /templates/{id}:
    get:
      description: Get an existing template
      operationId: getTemplate
      parameters:
      - $ref: '#/components/parameters/tokenHeader'
      - $ref: '#/components/parameters/idPath'
      responses:
        '200':
          description: Template update success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        default:
          description: Unexpected error
          content:
            application/json+problem:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - abtercms_auth:
            - 'read:templates'

    put:
      description: Update an existing template
      operationId: updateTemplate
      parameters:
      - $ref: '#/components/parameters/tokenHeader'
      - $ref: '#/components/parameters/idPath'
      requestBody:
        description: Template to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
      responses:
        '200':
          description: Template update success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        default:
          description: Unexpected error
          content:
            application/json+problem:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - abtercms_auth:
            - 'read:templates'
            - 'write:templates'

    delete:
      description: Delete an existing template
      operationId: deleteTemplate
      parameters:
      - $ref: '#/components/parameters/tokenHeader'
      - $ref: '#/components/parameters/idPath'
      responses:
        '200':
          description: Template delete success response
        default:
          description: Unexpected error
          content:
            application/json+problem:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - abtercms_auth:
            - 'read:templates'
            - 'write:templates'


  /pages:
    get:
      description: Retrieves a list of pages
      operationId: listPages
      parameters:
      - $ref: '#/components/parameters/tokenHeader'
      - $ref: '#/components/parameters/limitParam'
      - $ref: '#/components/parameters/offsetParam'
      responses:
        '200':
          description: Page list success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageListResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - abtercms_auth:
            - 'write:pages'

    post:
      description: Creates a new page
      operationId: createPage
      parameters:
      - $ref: '#/components/parameters/tokenHeader'
      requestBody:
        description: Page to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Page'
      responses:
        '204':
          description: Page create success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - abtercms_auth:
            - 'read:pages'
            - 'write:pages'

  /pages/{id}:
    get:
      description: Get an existing page
      operationId: getPage
      parameters:
      - $ref: '#/components/parameters/tokenHeader'
      - $ref: '#/components/parameters/idPath'
      - name: embed
        in: query
        description: "Comma separated list of extra fields to embed. Available values: 'rendered'"
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Page update success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - abtercms_auth:
            - 'read:pages'

    put:
      description: Update an existing page
      operationId: updatePage
      parameters:
      - $ref: '#/components/parameters/tokenHeader'
      - $ref: '#/components/parameters/idPath'
      requestBody:
        description: Page to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Page'
      responses:
        '200':
          description: Page update success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - abtercms_auth:
            - 'read:pages'
            - 'write:pages'

    delete:
      description: Delete an existing page
      operationId: deletePage
      parameters:
      - $ref: '#/components/parameters/tokenHeader'
      - $ref: '#/components/parameters/idPath'
      responses:
        '200':
          description: Page delete success response
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - abtercms_auth:
            - 'read:pages'
            - 'write:pages'

  /pages/{id}/activations:
    post:
      description: Activate an existing page
      operationId: activatePage
      parameters:
      - $ref: '#/components/parameters/tokenHeader'
      - $ref: '#/components/parameters/idPath'
      responses:
        '204':
          description: Page activation success response
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - abtercms_auth:
            - 'read:pages'
            - 'write:pages'

  /pages/{id}/inactivations:
    post:
      description: Inactivate an existing page
      operationId: inactivatePage
      parameters:
      - $ref: '#/components/parameters/tokenHeader'
      - $ref: '#/components/parameters/idPath'
      responses:
        '204':
          description: Page inactivation success response
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
      security:
        - abtercms_auth:
            - 'read:pages'
            - 'write:pages'

components:
  securitySchemes:
    abtercms_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'https://petstore.swagger.io/api/oauth/dialog'
          scopes:
            'write:redirects': modify redirects
            'read:redirects': read redirects
            'write:templates': modify templates
            'read:templates': read templates
            'write:pages': modify pages
            'read:pages': read pages
    api_key:
      type: apiKey
      name: api_key
      in: header

  parameters:
    tokenHeader:
      name: token
      in: header
      description: Token used for authorization
      required: true
      schema:
        type: string

    limitParam:
      name: limit
      in: query
      description: The size of a paginated list result
      required: true
      schema:
        type: integer
        format: int32
        default: 25

    offsetParam:
      name: offset
      in: query
      description: The offset of a paginated list result
      required: true
      schema:
        type: integer
        format: int32
        default: 0

    idPath:
      name: id
      in: path
      description: ID of resource to act upon (read, update, delete)
      required: true
      schema:
        type: string

  schemas:
    Redirect:
      required:
      - website
      - path
      - target
      - owner
      properties:
        id:
          type: string
          readOnly: true
        website:
          type: string
          format: uri
        path:
          type: string
        target:
          type: string
          format: uri
        owner:
          type: string
        etag:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true

    RedirectListResponse:
      title: Redirect List Response
      description: A wrapper object containing a paginated list of redirects.
      type: object
      properties:
        self:
          description: Pagination link pointing to the current page.
          type: string
          format: uri
        first:
          description: Pagination link pointing to the first page.
          type: string
          format: uri
        prev:
          description: Pagination link pointing to the previous page.
          type: string
          format: uri
        next:
          description: Pagination link pointing to the next page.
          type: string
          format: uri
        last:
          description: Pagination link pointing to the last page.
          type: string
          format: uri
        items:
          type: array
          items:
            $ref: '#/components/schemas/Redirect'
      required:
        - items

    Link:
      required:
      - rel
      - href
      properties:
        rel:
          type: string
        href:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: string

    Script:
      required:
      - src
      properties:
        src:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: string

    Meta:
      required:
      - content
      properties:
        name:
          type: string
        property:
          type: string
        content:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: string

    Assets:
      properties:
        header_css:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        header_js:
          type: array
          items:
            $ref: '#/components/schemas/Script'
        header_meta:
          type: array
          items:
            $ref: '#/components/schemas/Meta'
        footer_js:
          type: array
          items:
            $ref: '#/components/schemas/Script'

    Template:
      required:
      - website
      - name
      - version
      - body
      properties:
        id:
          type: string
          readOnly: true
        website:
          type: string
        name:
          type: string
        body:
          type: string
        http_header:
          type: object
          additionalProperties:
            type: string
        assets:
          $ref: '#/components/schemas/Script'
        etag:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true

    TemplateListResponse:
      title: Template List Response
      description: A wrapper object containing a paginated list of templates.
      type: object
      properties:
        self:
          description: Pagination link pointing to the current page.
          type: string
          format: uri
        first:
          description: Pagination link pointing to the first page.
          type: string
          format: uri
        prev:
          description: Pagination link pointing to the previous page.
          type: string
          format: uri
        next:
          description: Pagination link pointing to the next page.
          type: string
          format: uri
        last:
          description: Pagination link pointing to the last page.
          type: string
          format: uri
        items:
          type: array
          items:
            $ref: '#/components/schemas/Template'
      required:
      - items

    Page:
      required:
      - website
      - path
      - status
      - type
      properties:
        id:
          type: string
          readOnly: true
        website:
          type: string
        path:
          type: string
        status:
          type: string
          readOnly: true
        type:
          type: string
        title:
          type: string
        lead:
          type: string
        body:
          type: string
        http_header:
          type: object
          additionalProperties:
            type: string
        assets:
          $ref: '#/components/schemas/Script'
        target:
          type: string
        template_name:
          type: string
        template_temp_name:
          type: string
        template_temp_from:
          type: string
          format: date-time
        template_temp_until:
          type: string
          format: date-time
        etag:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true

    PageListResponse:
      title: Page List Response
      description: A wrapper object containing a paginated list of pages.
      type: object
      properties:
        self:
          description: Pagination link pointing to the current page.
          type: string
          format: uri
        first:
          description: Pagination link pointing to the first page.
          type: string
          format: uri
        prev:
          description: Pagination link pointing to the previous page.
          type: string
          format: uri
        next:
          description: Pagination link pointing to the next page.
          type: string
          format: uri
        last:
          description: Pagination link pointing to the last page.
          type: string
          format: uri
        items:
          type: array
          items:
            $ref: '#/components/schemas/Page'
      required:
      - items

    Problem:
      description: See https://www.rfc-editor.org/rfc/rfc7807 for details
      required:
      - type
      - title
      properties:
        type:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the problem type.  When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: 'about:blank'
          example: 'https://abtercms.com/problem/constraint-violation'
        title:
          type: string
          description: |
            A short, summary of the problem type. Written in English and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: "503"
        detail:
          type: string
          description: |
            A human readable explanation specific to this occurrence of the
            problem.
          example: Connection to database timed out
        instance:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
