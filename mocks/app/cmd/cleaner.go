// Code generated by mockery v2.20.0. DO NOT EDIT.

package main

import mock "github.com/stretchr/testify/mock"

// Cleaner is an autogenerated mock type for the cleaner type
type Cleaner struct {
	mock.Mock
}

type Cleaner_Expecter struct {
	mock *mock.Mock
}

func (_m *Cleaner) EXPECT() *Cleaner_Expecter {
	return &Cleaner_Expecter{mock: &_m.Mock}
}

// Run provides a mock function with given fields:
func (_m *Cleaner) Run() {
	_m.Called()
}

// Cleaner_Run_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Run'
type Cleaner_Run_Call struct {
	*mock.Call
}

// Run is a helper method to define mock.On call
func (_e *Cleaner_Expecter) Run() *Cleaner_Run_Call {
	return &Cleaner_Run_Call{Call: _e.mock.On("Run")}
}

func (_c *Cleaner_Run_Call) Run(run func()) *Cleaner_Run_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Cleaner_Run_Call) Return() *Cleaner_Run_Call {
	_c.Call.Return()
	return _c
}

func (_c *Cleaner_Run_Call) RunAndReturn(run func()) *Cleaner_Run_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewCleaner interface {
	mock.TestingT
	Cleanup(func())
}

// NewCleaner creates a new instance of Cleaner. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCleaner(t mockConstructorTestingTNewCleaner) *Cleaner {
	mock := &Cleaner{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
